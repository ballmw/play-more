-import controllers.ScalateTemplate._
-@ val workout:(models.Workout,models.Athlete,Seq[models.Comment])
-@ val mode: String = "full"
-
  var commentsTitle = "No Comments"
  if (workout._3.size > 0)
    commentsTitle = workout._3.size + " comments, lastest by " + workout._3(workout._3.size - 1).author

div(class="workout #{mode}")
  h2.title
    a(href={action(controllers.Profile.show(workout._1.id()))}) #{workout._1.title}
  .metadata
    span.user Posted by #{workout._2.firstName} on
    span.date #{workout._1.postedAt}
    - if (mode != "full")
      .comments #{commentsTitle}
  - if (mode != "teaser")
    .description
      .about Detail:
      = workout._1.description

- if (mode == "full")
  .actions
    button#save(class="btn primary" style="display: none" rel={action(controllers.Profile.postWorkout(workout._1.id.get))}) Save
    button#delete(class="btn danger" rel={action(controllers.Profile.remove(workout._1.id()))}) Delete

  :plain
      <script type="text/coffeescript">
      $('.title,.description').attr('contentEditable', 'true');
      $('.title,.description').click ->
        $('#save').show()

      $('#delete').click ->
        $.ajax
          type: 'POST',
          dataType: 'jsonp'
          url: $(this).attr('rel')
          error: ->
            alert('Delete failed, please try again.')
          success: (data) ->
            $('.workout').remove()
            location.href = "/more"
      </script>

  .comments
    h3 #{commentsTitle}
    -#todo - zebra strip
    - workout._3.map { comment =>
      .comment
        .comment-content
          .about Detail:
          = comment.content
        .metadata
          span.author #{comment.author} on
          span.date #{comment.postedAt}
    - }
